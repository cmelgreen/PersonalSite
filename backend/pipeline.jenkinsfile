pipeline {

    agent {
        docker {
            image 'golang:latest'
        }
    }
    
    environment {
        GOCACHE = "${WORKSPACE}"
    }

    stages {
        stage('Clone git') {
            steps {
                git 'https://github.com/cmelgreen/PersonalSiteServer'
            }
        }
            
        stage('Install') {
            steps {
                sh 'go get "github.com/julienschmidt/httprouter"'
            }
        }

        stage('Build') { 
            steps {
                sh 'go build -o server backend/main.go'
            }
        }
    }
    
    post {
        success {
            step([
                $class: 'AWSCodeDeployPublisher', 
                applicationName: 'server_cd_app', 
                awsAccessKey: '', 
                awsSecretKey: '', 
                deploymentGroupAppspec: false, 
                deploymentGroupName: 'server_cd_group', 
                deploymentMethod: 'deploy', 
                excludes: '', 
                iamRoleArn: '', 
                includes: '**', 
                proxyHost: '', 
                proxyPort: 0,
                region: 'us-west-2', 
                s3bucket: 'server-s3-bucket', 
                s3prefix: '', 
                subdirectory: '', 
                versionFileName: '', 
                waitForCompletion: false])
        }
    }
}
