pipeline {
    agent any
    
    stages {
        stage('Clone git') {
            steps { git 'https://github.com/cmelgreen/PersonalSite' }
        }

        stage('Backend') {
            agent { docker { 
                image 'golang:latest' 
                args '-v "$PWD"/backend:/backend -w /backend'
                reuseNode true
            } }

            environment { GOCACHE = "${WORKSPACE}" }

            steps { 
                dir('backend') {
                    sh 'make install' 
                    sh 'make build'
                }
            }
        }

        stage('Frontend') {
            agent { docker { 
                image 'node:latest' 
                reuseNode true
            } }

            steps { 
                dir('frontend-test') {
                    sh 'make install'
                    sh 'make build' 
                }
            }
        }
        
    }
    
    post ('Deploy') {
        success {
            step([
                $class: 'AWSCodeDeployPublisher', 
                applicationName: 'server-app', 
                awsAccessKey: '', 
                awsSecretKey: '', 
                deploymentGroupAppspec: false, 
                deploymentGroupName: 'server-app-group', 
                deploymentMethod: 'deploy', 
                excludes: 'infrastructure-as-code, frontend/src', 
                iamRoleArn: '', 
                includes: '**', 
                proxyHost: '', 
                proxyPort: 0,
                region: 'us-west-2', 
                s3bucket: 'server-app-bucket', 
                s3prefix: '', 
                subdirectory: '', 
                versionFileName: '', 
                waitForCompletion: false
            ])
        }
    }
}
